name: Build and release syrius

on:
  push:
    branches-ignore:
      - master
    tags:
      - '*'
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.7.x"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: "stable"
      - name: Check flutter version
        run: flutter --version
      - name: Build syrius desktop
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --debug
      - name: Package into zip
        run: |
          Compress-Archive -Path build\windows\runner\Debug\* -DestinationPath .\syrius-alphanet-windows-amd64-debug.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: syrius-alphanet-windows-amd64-debug.zip
  make-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set variables
        run: |
          echo "SYRIUS_VERSION=${{ github.ref }}" >> $GITHUB_ENV
          echo "Syrius Version: $SYRIUS_VERSION"
          GOZENON=$(curl -s https://raw.githubusercontent.com/zenon-network/go-zenon/master/metadata/version.go | grep Version | awk -F '"' '{print $2}')
          echo "Go-Zenon Version: $GOZENON"
          BODY=$(cat <<EOF
          Syrius $SYRIUS_VERSION features the pre-release version of the [go-zenon](https://github.com/zenon-network/go-zenon) $GOZENON full node.

          Syrius for Windows requires Microsoft Visual C++ to be installed.
          [Download Microsoft Visual C++](https://aka.ms/vs/16/release/vc_redist.x64.exe)

          Github Action Context information
          Git reference: ${{ github.ref }}
          Repository URL:  ${{ github.repositoryUrl }}
          Run ID: ${{ github.run_id }}
          Commit hash: ${{ github.sha }}
          Workflow hash: ${{ github.workflow_sha }}
          EOF
          )
          echo "$BODY"
          echo "BODY<<EOFMARKER" >> ${GITHUB_ENV}
          echo "${BODY}" >> ${GITHUB_ENV}
          echo "EOFMARKER" >> ${GITHUB_ENV}
      - name: Prepare releases directory
        run: mkdir releases
      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-artifacts
      - name: Prepare releases
        run: |
          cp syrius-alphanet-windows-amd64-debug.zip releases/
      - name: Generate checksums
        run: |
          cd releases/
          echo $(sha256sum *)
          echo $(sha256sum *) >> SHA256CHECKSUMS.txt
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.4.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.SYRIUS_VERSION }}
          prerelease: ${{ contains(env.SYRIUS_VERSION, '-') }}
          tag: ${{ env.SYRIUS_VERSION }}
          file_glob: true
          file: releases/*
          overwrite: true
          body: ${{ env.BODY }}
